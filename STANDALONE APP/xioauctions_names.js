const ids = [
    171266,
    172044,
    179315,
    171267,
    172045,
    172061,
    171315,
    171268,
    172046,
    172062,
    170554,
    168586,
    171269,
    171285,
    171428,
    171349,
    173032,
    171270,
    171286,
    171350,
    173033,
    171271,
    171287,
    171351,
    173034,
    171272,
    171288,
    171352,
    173035,
    171273,
    171289,
    173036,
    171274,
    172052,
    172068,
    171370,
    173037,
    171275,
    172053,
    172069,
    171276,
    172054,
    172055,
    171278,
    171263,
    172041,
    172063,
    179314,
    176811,
    171290,
    171264,
    172042,
    168589,
    169701,
    172049,
    172048,
    171291,
    172040,
    171292,
    172051,
    172047,
    180457,
    171301,
    184090,
    172050,
    168583,
    183823,
];
const https = require('https');
const parseXml = require('@rgrove/parse-xml');
const readline = require('readline');

function doRequest(item) {
    return new Promise((res, rej) => {
        https.get(`https://www.wowhead.com/item=${item}&xml`, resp => {
            let data = '';
            resp.on('data', chunk => data += chunk);
            resp.on('end', () => res(data));
        }).on('error', err => rej(err));
    });
}

function readInput(ask) {
    return new Promise(res => {
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });
        let text = '';
        console.log(ask);
        rl.on('line', line => {
            text += line + '\n';
            if (line.length === 0) {
                rl.close();
                res(text.trim());
            }
        });
    });
}

async function doMatch(item) {
    const response = await doRequest(item);
    let doc = parseXml(response).children[0].children[0];
    let itemName = doc.children[0].children[0].text;
    const recipe = response.includes('Gathered by players')
        ? undefined
        : doc.children.find(x => x.name === 'createdBy')?.children[0]?.children.map(x => ({
        id: +x.attributes.id,
        name: x.attributes.name,
        q: +x.attributes.count
    })) ?? undefined;

    return [item, itemName, (recipe?.length ?? []) > 0 ? recipe : undefined];
}

async function calculateIds(ids) {
    const results = (await Promise.all(ids.map(id => doMatch(id))))
        .reduce((p, c) => ({...p, [c[0]]: {name: c[1], recipe: c[2]}}), {});

    const items = {};
    const recipes = {};

    for (const [itemId, content] of Object.entries(results)) {
        items[itemId] = content.name;
        for (const {id, name, q} of content?.recipe ?? []) {
            if (recipes[itemId] === undefined) {
                recipes[itemId] = {};
            }
            recipes[itemId][id] = q;
            items[id] = name;
        }
    }

    return {items, recipes};
}

async function main() {
    // const str = await readInput("Enter xioauctions string:");
    const str = "171266,175&1200000|77&1200200|776&1208700|406&1208800|2&1208900|42&1209000|184&1209900|100&1210000|62&1408200|287&1448200|439&1448300|551&1456700|66&1456800|214&1456900|79&1457000|6&1457100|70&1709000|300&1779000|12&1781000|20&1790000|126&1809600|40&1899600|24&1900000|15&1950900|154&1951000|5&1951100|4&1951200|79&1951300|19&1991300|194&1999900|8&3000000000|\n" +
        "172044,203&188000|370&193500|20&198000|75&208000|118&208100|1046&228100|21&228200|96&228600|99&231100|25&238700|4&3900000000|\n" +
        "179315,30&10000|60&10500|1050&10600|86&10700|862&11100|365&11200|1610&11300|610&11400|600&11500|612&11600|600&11700|600&11800|600&11900|600&12000|680&12100|501&12200|300&12300|300&12400|653&12500|88176&12600|30&22200|39&32400|163&32500|2690&50000|1&115400|\n" +
        "171267,375&84900|1392&89800|535&89900|534&99900|100&100000|424&109000|258&109900|460&111300|1921&135000|110&139700|55&139800|302&139900|862&140000|512&149900|182&150000|1181&152400|7207&152500|580&153400|775&163400|609&163500|3297&163600|687&164500|244&165000|708&175000|254&180000|360&190000|2&208900|331&238900|5&240000|35&249600|4&3900000000|\n" +
        "172045,2029&768500|13&798500|2763&838500|2079&839600|118&840000|47&840700|19&841000|12&841400|45&852000|20&852400|99&863400|4&3700000000|\n" +
        "172061,45&84900|82&85000|91&87600|19&193500|88&193600|198&248800|4&3800000000|\n" +
        "171315,1024&325300|2345&325400|1210&325500|540&325600|147&325700|637&325800|758&325900|1433&326000|216&326100|29&326200|1180&326300|78&326400|55&326500|98&326600|87&326700|79&326800|293&326900|1586&327000|64&327900|707&328000|167&330000|15&335000|181&336200|102&336300|133&336400|851&336500|4&336900|1521&337000|1544&337800|26&338000|15&338400|2292&338500|82&338800|2&338900|1&339100|21&339300|8423&345500|1912&350000|15639&399800|27085&399900|160&404500|4807&440000|204&454500|2410&474000|15484&475000|3919&496300|3380&498500|1882&599900|6167&879900|30633&999900|12340&1499900|78&1715600|49&23000000|4&3600000000|1&5555557800|\n" +
        "171268,670&91400|6&91500|1495&91900|49&119600|417&124000|815&126100|1083&141900|4&5100000000|\n" +
        "172046,58&9900|607&10000|9&19600|23&39100|100&42700|4&2600000000|\n" +
        "172062,76&19000|1738&19800|20&44200|30&110400|99&321500|9&330800|95&344300|4&3500000000|\n" +
        "170554,9854&249400|43674&249500|81&249600|3361&249700|52&249800|587&250000|38&255500|96&256500|25392&256600|154&256700|33850&256800|8590&257000|1670&257700|2034&257900|1922&258000|796&259900|7074&260000|1&264400|31&264500|11&265000|593&269900|8718&273300|76&273400|4&273500|17&273600|4481&273700|4000&279900|3828&289700|4000&307900|4000&319900|4000&349900|9866&390000|675&601900|85&706300|1&999900|44&19000000|4&2900000000|1&5555557000|\n" +
        "168586,16&250000|16583&287600|368&287700|1260&287800|478&287900|97&288000|61&288100|8&288200|600&288400|17&288500|621&288600|4007&288700|11&288800|3&288900|8&289000|606&289100|3965&289300|642&289400|3170&289900|1412&318600|8752&320000|10418&350000|2277&389700|2345&399700|7498&400000|18&444700|549&459600|3068&482800|4&499900|4142&600000|259&16000000|4&2000000000|1&5555558800|\n" +
        "171269,14&70000|7&80000|21&90000|7&99800|1&99900|43&100000|22&140000|9&148500|20&148800|8&149000|8&149900|361&181600|20&185900|11&30000000|100&490000000|8&4300000000|\n" +
        "171285,6941&98400|2015&280000|4&4250000000|7&4500000000|\n" +
        "171428,1680&649900|5591&650000|4534&659900|10&681700|961&682500|35&685000|421&736900|1800&744400|20&30000000|4&3600000000|\n" +
        "171349,417&1909900|3455&1993400|1686&1999900|652&2103400|134&2203400|4&3500000000|\n" +
        "173032,3805&4000|711&4500|575&5000|178&5100|833&5300|475&5400|106&5500|276&6200|41&6300|4790&9400|3156&9500|790&9800|669&9900|961&10000|39&17900|219&18000|29&19900|10376&20000|4&22000|85&22300|90&22500|382&22700|356&22800|93&22900|4049&23000|3&23900|6447&24000|39&25000|95&25500|40&29900|102&30000|3&30900|199&33000|5&33200|7&99900|105&148700|115&148900|229&149900|5325&150000|4&4100000000|\n" +
        "171270,465&3040000|1458&3050000|747&3069800|789&3079800|140&3149400|10&3149700|55&3150000|231&3240000|5&3253200|78&3490000|8&30000000|20&99000000|60&490000000|4&1490000000|\n" +
        "171286,562&96800|239&96900|382&97000|26&97500|1283&98000|47&108000|1671&158700|4&1490000000|\n" +
        "171350,29&1494000|429&1504000|2&1604000|100&1739200|60&1742000|4&3700000000|\n" +
        "173033,31&284900|2202&294900|77&295000|30&297900|28&298000|2845&298300|463&298800|227&299000|57&299900|1773&300000|52&308900|14&309000|16&309300|25&309400|23&309500|78&309900|189&310000|266&312800|8&320000|298&322800|127&322900|30&323000|7&323200|19&323300|12&324400|48&344400|10&344900|13&345000|70&349900|27&352800|200&400000|10518&409900|220&699900|12727&700000|6&788900|4&4100000000|\n" +
        "171271,186&149700|103&149800|34&149900|40&150000|62&200000|40&202500|20&204500|34&209000|10&209700|4&4350000000|\n" +
        "171287,181&74900|392&94900|12&95000|277&102500|120&104500|22&234500|232&371800|20&30000000|4&4250000000|\n" +
        "171351,48&2590000|18&2600000|9&2602700|146&6500000|4&4300000000|\n" +
        "173034,29&197800|26349&207800|11&209800|34&209900|66&210000|40&216500|366&216700|29&218800|56&219800|86&219900|10&220000|14&236400|12&250000|9&257700|70&259900|1000&268800|403&306700|2439&359800|4&5800000000|\n" +
        "171272,101&1440000|10&1450000|147&1521000|81&1569400|137&1620800|19&1620900|65&3999900|4&4300000000|\n" +
        "171288,22&78500|1601&98500|3508&98900|25&99000|83&99900|944&100000|236&120000|83&185900|22&644500|5&1051400|20&30000000|\n" +
        "171352,42&2651800|38&2661800|72&2684100|417&3499900|4&4350000000|\n" +
        "173035,67&140000|251&160000|78&160100|35&161700|41&161800|221&161900|67&162000|252&162400|174&164000|94&166100|22&166500|42&166600|95&167500|27&168000|54&169800|51&169900|16&170000|2210&195000|6&201100|4&4100000000|\n" +
        "171273,866&1439800|3132&1439900|1000&1449900|343&1489900|3&1490000|726&1492900|2027&1493000|97&1548800|12&1564500|89&1595900|578&1652900|542&1883100|1451&1993000|982&2096100|485&2200000|8&30000000|100&400000000|4&4250000000|\n" +
        "171289,14&865200|201&875200|60&885200|28&995200|1864&995300|10&995400|5&995500|28&998500|419&999000|8&999900|20&30000000|4&4100000000|\n" +
        "173036,41&240000|20&250000|375&253800|223&253900|134&256400|5172&256500|1288&257000|7906&257100|47&257200|25760&257300|3811&257400|3505&257500|1352&258800|33&258900|288&259000|108&259500|41&260000|24&265400|17&265500|25&265600|2536&269800|124&270000|58&279800|10&294500|113&299800|60&299900|2102&300000|5&300200|298&301500|56&302000|37&304400|287&304500|120&304900|70&305000|135&309300|454&309400|444&309500|239&310000|2248&310900|9888&311000|8080&321000|145&325700|24&349900|8396&390000|850&394500|1999&399300|203&399900|930&404000|6000&450000|560&459500|10000&700000|5000&709500|80&150000000|4&3100000000|\n" +
        "171274,237&1479900|42&1489900|20&1490000|1&5000000|8&30000000|4&4000000000|\n" +
        "172052,51&500|784&600|54294&700|1257&900|228&1000|2&1100|3&1200|83&1300|516&1400|97&1500|48&2000|15&2300|343&3000|657&5000|161&6500|5&7000|23&7500|61&10000|1098&49800|79&50000|25&517300|424&4000000000|\n" +
        "172068,83&3500|17&4000|100&35100|14&41200|22&41300|21&52100|4&4100000000|\n" +
        "171370,12&2500|50&2900|1&5500|20&6300|272&36700|2&49000|22&1015700|1&1593000|2&1904700|4&3500000000|\n" +
        "173037,45&221500|3003&241500|7&246100|100&248500|145&257500|80&258000|280&258500|26&259900|88&288000|1656&288500|1998&289000|472&289300|945&289500|295&290000|382&300000|1375&305000|2499&307700|9&309900|7&310000|18&319000|8&319500|160&320000|4&328900|14&358900|3&409400|2&30000000|4&3600000000|\n" +
        "171275,905&1374900|620&1444900|400&1499500|1167&1650000|400&1800000|150&2204300|8&30000000|100&390000000|4&4150000000|\n" +
        "172053,77&579900|467&580000|490&585500|131&585800|177&585900|540&586000|17&586600|138&586700|35&586800|568&586900|534&587000|553&587200|308&587300|26&587400|236&587500|163&619000|101&627500|284&633800|56&640200|23&644000|58&644300|99&644400|115&644500|20&644800|24&644900|32&649900|45&650000|28&659900|107&660000|459&679900|115&680000|35&689800|79&689900|18&690000|9&699800|3254&699900|243&701000|20&706500|23&707000|16&909800|2&30000000|4&3500000000|\n" +
        "172069,23&24900|473&25000|63&30000|195&39900|322&40000|2350&48900|190&49000|280&49400|99&71100|99&71800|4&3600000000|\n" +
        "171276,332&6958000|341&6968000|643&6969400|18&6969500|123&6969600|5&6969700|280&6969800|76&6999900|120&7009800|220&7009900|5&7059900|259&7070000|40&7078800|50&7078900|7&7079300|23&7079600|497&7499500|82&7998700|1&8399300|1225&8399400|320&8769900|1&180000000|40&400000000|2&4250000000|\n" +
        "172054,82&10000|7015&17300|99&17400|41&17500|492&17800|27&17900|241&18800|524&18900|110&19600|189&19700|818&19800|45&19900|2&21300|3792&21400|5&21600|717&21700|200&21800|200&21900|200&22000|205&22100|200&22200|200&22300|200&22400|200&22500|200&22600|200&22700|203&22800|200&22900|200&23000|200&23100|200&23200|200&23300|200&23400|200&23500|200&23600|200&23700|200&23800|200&23900|200&24000|200&24100|200&24200|200&24300|200&24400|200&24500|200&24600|200&24700|200&24800|200&24900|9730&25000|5&60000|4300&199900|4&5000000000|\n" +
        "172055,35&10000|385&13500|7&15000|187&15600|413&15700|2314&15800|6333&15900|119&16300|134&16400|40&16500|45&16600|44&16700|12&16800|113&19500|1218&19600|31&19700|57&19800|23&19900|225&20000|98&20100|95&22000|578&25900|3331&26000|11&26200|8&26600|11&26700|12&26900|7&29300|396&29400|1&40700|20&30000000|6&5100000000|\n" +
        "171278,199&2023900|182&2033900|100&2115600|183&2151500|12&2151600|80&2186500|111&5500000|2&180000000|33&490000000|4&3000000000|\n" +
        "171263,281&10000|5&19400|6&19900|33&20000|61&20200|459&25000|12&25400|720&27900|221&52800|8&835300|20&30000000|100&390000000|4&3700000000|\n" +
        "172041,1313&459000|1200&550000|99&618500|900&620000|605&900000|4&5800000000|\n" +
        "172063,116&222400|5&252400|99&441500|31&462600|4&2600000000|\n" +
        "179314,46&40000|5857&48500|67&49000|585&50000|283&51000|71&53700|118&53800|33&53900|91&54000|132&54400|28&59400|47&60000|27&69800|272&70000|146&78900|300&99900|99&100000|186&108900|295&109800|35&129800|82&129900|37&130000|55&138900|1018&139600|147&139700|127&140000|99&142000|139&142200|99&152200|7&155000|41&156500|18&156900|35&157000|41&158900|10&159900|2&30000000|\n" +
        "176811,34&2990000|280&3000000|4&2600000000|\n" +
        "171290,134&639000|6&649000|30&650000|98&659300|40&659400|122&699400|25&699500|10&699800|22&700000|12&730000|10&735300|14&735400|10&735500|16&737500|18&737900|341&738000|10&738500|10&739400|22&749400|20&30000000|4&5100000000|\n" +
        "171264,5&38700|3&38800|5&39000|23&59000|8&69000|136&69800|8&69900|13&70000|1&90000|3&100000|2&139900|4&159800|3&1725600|14&1802500|4&3700000000|\n" +
        "172042,141&7177300|287&7177400|125&7177500|37&7249900|1&7500000|4&4100000000|\n" +
        "168589,20&203000|53384&273000|7312&273100|2738&273200|28922&273300|12607&273400|7811&273500|9&274000|4&274200|168&274300|124&274400|59&274600|446&274700|88&274800|269&274900|44&277600|3213&277800|2&277900|400&296500|455&297200|400&298200|458&298500|400&299300|2200&299800|1200&300000|400&300100|579&301400|400&301600|322&301800|460&302000|2200&302200|399&302800|342&303000|345&303500|342&304200|393&305000|398&307200|8566&309900|8128&314000|7200&324400|19678&349900|10062&400000|6&420000|16&528900|1623&544700|1360&554000|58&664200|32&18000000|4&2600000000|1&5555553200|\n" +
        "169701,1768&39600|12099&39700|12473&39800|977&39900|1984&40000|1180&40600|3354&40900|4139&41000|9777&41100|13886&41200|3066&41300|11683&41400|140&41500|6934&42100|1689&42200|392&42300|77&42400|1070&42500|14&44500|14794&44600|873&44700|3206&44800|7545&44900|105&45100|173&45200|124&45300|25&45700|147&45800|25&45900|39&46000|156&46300|899&46400|1443&46500|998&47500|100&50000|749&55000|5368&57400|2653&57500|135&58900|944&59000|14&59400|6949&59500|2137&59800|26201&59900|74&60000|449&61100|168&61900|206&62000|6&62500|14886&62900|180&63000|1555&63100|302&63200|208&63800|5043&63900|481&73900|1946&74000|778&74500|3560&75000|4076&77500|6380&79700|78&79800|15604&88000|49800&99900|1&102500|49681&199900|2&305700|301&3000000|4&3600000000|\n" +
        "172049,764&210000|3158&220000|12&230000|1378&237500|64&242600|1300&260000|99&269900|600&270000|1460&300000|1290&307500|580&330000|320&350000|35&1000000|4&4000000000|\n" +
        "172048,1073&14500|1669&14600|99&34000|30&39300|42&77100|4&4200000000|\n" +
        "171291,33&449900|39&459900|402&559900|45&564900|20&30000000|4&3900000000|\n" +
        "172040,260&202100|39&499300|40&528400|99&735700|4&3800000000|\n" +
        "171292,536&320000|420&330000|1800&700000|20&30000000|4&4150000000|\n" +
        "172051,2366&44900|2556&45000|4546&50000|60&81200|99&95300|1000&399900|2&985000|4&4350000000|\n" +
        "172047,16&689300|1111&699300|3&699400|60&699500|24&700000|6&709300|18&709400|4&3600000000|\n" +
        "180457,83&19967600|2&19967700|7&19977700|40&19989800|5&19989900|18&20000000|46&35008000|6&39509800|26&45009800|6&48009800|\n" +
        "171301,117&5500|6&9900|512&10000|4&4000000000|\n" +
        "184090,117&769700|38&811700|100&1739200|193&1755300|2&30000000|4&2900000000|\n" +
        "172050,553&89900|30&235700|99&336700|4&3900000000|\n" +
        "168583,143&549800|268&549900|2421&550000|4&568800|9914&569100|12862&569200|33&569400|168&569500|8690&569800|13081&569900|117&570000|7320&580000|4&584000|163&584300|1011&584400|13696&586100|3849&586200|7974&586300|4202&586400|3763&586500|61&586600|39&586700|3851&586800|41&586900|1825&587000|3388&587500|57&588000|98&589900|188&590000|3742&600000|233&650000|4915&697900|83743&698000|18&737600|62&1059000|1&1110000|68&32000000|4&4000000000|1&5555550000|\n" +
        "183823,6&70000|201&77500|39&80000|4&3900000000|";
    const input = transformInput(str);
    const {items, recipes} = (await calculateIds(Array.from(input.keys())));
    console.log(input);
    console.log(items);
    console.log(recipes);
}

function transformInput(valueInput) {
    function parse(line) {
        let [itemId, lines] = line.split(",")
        return {
            itemId: +itemId,
            items: lines.substr(0, lines.length - 1).split("|").map(x => {
                const [q, c] = x.split("&");
                return {q: +q, c: +c};
            }).sort((a, b) => a.c - b.c)
        }
    }

    const lines = new Map();
    for (const line of valueInput.split("\n")) {
        const {itemId, items} = parse(line);
        lines.set(itemId, items);
    }
    return lines;
}

function htmlGenerator() {
    return `<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>XioAuctions</title>
    <style>*,*::before,*::after{box-sizing:content-box}html,body{margin:0;padding:0;border:0;font:16px/1.6 'Helvetica'}#container{margin:0 auto;max-width:40em;padding:1.6em}h1{font-size:5.06em;line-height:1.28em;padding-top:.296em;margin-bottom:.0247em}h2{font-size:3.38em;line-height:1.44em;padding-top:.389em;margin-bottom:.0926em}h3{font-size:2.25em;line-height:1.44em;padding-top:.389em;margin-bottom:.333em}h4{font-size:1.50em;line-height:1.08em;padding-top:.208em;margin-bottom:.875em}p{font-size:1.00em;line-height:1.63em;padding-top:.500em;margin-bottom:1.13em}</style>
</head>
<body>
<div id="container">
    <h1>XioAuctions</h1>
    <label for="addon_input">
        <textarea id="addon_input" rows="10" style="resize: none;width: 100%"></textarea>
    </label>
    
</div>
</body>
`;
}


main()
    .then(data => {
        if (data) {
            console.log(data);
        }
    })
    .catch(err => console.error(err));
